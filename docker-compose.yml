networks:
  vivified-net:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: vivified
      POSTGRES_USER: vivified
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vivified-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vivified"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2.10-alpine
    command: ["-js", "-m", "8222"]
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - vivified-net
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4222"]
      interval: 10s
      timeout: 5s
      retries: 5

  vivified-core:
    build: ./core
    environment:
      DATABASE_URL: postgresql+asyncpg://vivified:${DB_PASSWORD:-changeme}@postgres:5432/vivified
      NATS_URL: nats://nats:4222
      JWT_SECRET: ${JWT_SECRET:-change-this-secret}
      # When UI is served from the same origin (/admin/ui), CORS is not needed.
      # Keep dev Vite origin allowed if using the dev server.
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:5173}
      DEV_MODE: "true"
      DB_INIT: "true"
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin-pass-change-me}
      LOG_LEVEL: INFO
      USE_TLS: "true"
    ports:
      - "8000:8000"
      - "8443:8443"
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - vivified-net
    volumes:
      - ./tls:/certs:ro
    healthcheck:
      test: ["CMD", "curl", "-fk", "https://localhost:8443/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-ui-dev:
    image: node:20.19.5
    # Dev-only: run as root for reliable volume writes
    working_dir: /workspace
    environment:
      VITE_CORE_URL: http://localhost:8000
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    command: >-
      bash -lc "set -e;
      npm ci --no-audit --progress=false;
      (for i in $(seq 1 120); do
        if (echo > /dev/tcp/127.0.0.1/5173) >/dev/null 2>&1; then
          echo 'admin-ui-dev: Vite ready at http://localhost:5173';
          break;
        else
          echo 'admin-ui-dev: waiting for Vite...';
          sleep 1;
        fi;
      done) &
      exec npm run dev -- --host 0.0.0.0 --port 5173"
    volumes:
      - ./core/admin_ui:/workspace
      - admin_ui_node_modules:/workspace/node_modules
    ports:
      - "5173:5173"
    depends_on:
      vivified-core:
        condition: service_started
    networks:
      - vivified-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -lc 'echo > /dev/tcp/127.0.0.1/5173'"]
      interval: 10s
      timeout: 2s
      retries: 5

  user-management-plugin:
    build: ./plugins/user_management
    environment:
      CORE_URL: http://vivified-core:8000
      LOG_LEVEL: INFO
    depends_on:
      vivified-core:
        condition: service_healthy
    networks:
      - vivified-net
    restart: unless-stopped

  apprise-notifier-plugin:
    build: ./plugins/apprise_notifier
    environment:
      CORE_URL: http://vivified-core:8000
      LOG_LEVEL: INFO
      # Comma-separated Apprise target URLs (e.g., mailto://you@example.com)
      APPRISE_TARGET_URLS: ${APPRISE_TARGET_URLS:-}
      # Default to dry-run unless explicitly disabled
      APPRISE_DRY_RUN: ${APPRISE_DRY_RUN:-true}
    depends_on:
      vivified-core:
        condition: service_healthy
    networks:
      - vivified-net
    restart: unless-stopped

  pushover-notifier-plugin:
    build: ./plugins/pushover_notifier
    environment:
      CORE_URL: http://vivified-core:8000
      LOG_LEVEL: INFO
      PUSHOVER_API_TOKEN: ${PUSHOVER_API_TOKEN:-}
      PUSHOVER_USER_KEY: ${PUSHOVER_USER_KEY:-}
      # Set to true to allow request.user_key override
      ALLOW_USER_OVERRIDE: ${ALLOW_USER_OVERRIDE:-false}
    depends_on:
      vivified-core:
        condition: service_healthy
    networks:
      - vivified-net
    restart: unless-stopped

volumes:
  postgres_data:
  admin_ui_node_modules:
